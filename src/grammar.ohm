KK {
  Program = Expression*
  Block = "{" Expression+ "}"
  Expression
    = string -- raw
    | If
    | number
    | VariableDeclaration
    | FunctionCall
    | Mapping
    | VariableRef
  If = "if" Expression Block ("else" Block)?
  VariableRef = name
  Mapping = "{" (name ":" Expression)* "}"
  VariableDeclaration = name "=" Expression
  FunctionCall = name "(" ListOf<Expression, ","> ")"

  // primitives
  comment = "//" (~"\n" any)*
  name = (alnum | "_" | "." | "@" | "*" | "~" | "+" | "-" | "/" | "*")+
  string = "\"" (~"\"" any)* "\""
  number = digit+
  space := "\t" | " " | "\n" | "\r" | comment
}
